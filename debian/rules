#!/usr/bin/make -f

export DH_VERBOSE=1
export DEB_BUILD_HARDENING=1
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/buildflags.mk

# Parallel build support as adviced
# at https://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules-options
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	SCONS_ARGS += -j $(NUMJOBS)
	# Don't use MAKEFLAGS as it has strange 'w' and '--jobserver-fds=3,4' by default
endif

# Add support for verbose builds
ifneq (,$(filter verbose,$(DEB_BUILD_OPTIONS)))
	SCONS_ARGS += VERBOSE=1
endif

# Run tests by default
#ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
#	SCONS_ARGS += tests=1 deterministic_tests=1
#endif
SCONS_ARGS += tests=0 deterministic_tests=0

override_dh_auto_build:
	# Print build env info to help debug builds on different platforms
	dpkg-architecture
	@echo $(SCONS_ARGS)
	scons $(SCONS_ARGS) || touch FAIL # Print config.log if build fails
	@echo '*****************************************'
	@echo '**  config.log contents for debugging  **'
	@echo '*****************************************'
	@cat config.log
	@echo '*****************************************'
	if [ -f FAIL ]; then exit 1; fi

# Start earlier than MySQL which has value 19
override_dh_installinit-arch:
	dh_installinit -n --name=garb -- defaults 18 22

override_dh_strip:
	dh_strip -pgalera-3 --dbg-package=galera-3-dbg
	dh_strip -pgalera-arbitrator-3 --dbg-package=galera-arbitrator-3-dbg

%:
	dh $@

override_dh_auto_clean:
	dh_auto_clean
	rm -f `find . -name *.o`
	rm -f `find . -name *.a`
	rm -f `find . -name *.os`
	rm -rf .sconf_temp
	rm -f FAIL  .sconsign.dblite
	rm -f galera/tests/galera_check
	rm -f galerautils/tests/gu_tests
	rm -f galerautils/tests/gu_tests++
	rm -f config.log galera/tests/galera_check.passed galera_check.log galerautils/tests/gu_tests.passed gu_tests++.log gu_tests.log


.PHONY: override_dh_strip
