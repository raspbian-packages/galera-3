From e8c356307fbf3c79642a87785a4c2eba9794d92a Mon Sep 17 00:00:00 2001
From: Teemu Ollakka <teemu.ollakka@galeracluster.com>
Date: Fri, 3 May 2019 11:29:57 +0300
Subject: [PATCH] codership/galera#539 Do not fail in setschedparam if not
 supported
Forwarded: https://github.com/codership/galera/issues/539

Do not fail when trying to set scheduling parameters in the system
where the functionality is not supported. Instead print a warning
in the error log and ignore future calls.
---
 galerautils/src/gu_thread.cpp | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

--- a/galerautils/src/gu_thread.cpp
+++ b/galerautils/src/gu_thread.cpp
@@ -7,6 +7,7 @@
 #include "gu_utils.hpp"
 #include "gu_string_utils.hpp"
 #include "gu_throw.hpp"
+#include "gu_logger.hpp"
 
 #include <iostream>
 #include <vector>
@@ -78,8 +79,11 @@ gu::ThreadSchedparam gu::thread_get_sche
     return ThreadSchedparam(policy, sp.sched_priority);
 }
 
+static bool schedparam_not_supported(false);
+
 void gu::thread_set_schedparam(pthread_t thd, const gu::ThreadSchedparam& sp)
 {
+    if (schedparam_not_supported) return;
 #if defined(__sun__)
     struct sched_param spstr = { sp.prio(), { 0, } /* sched_pad array */};
 #else
@@ -88,6 +92,17 @@ void gu::thread_set_schedparam(pthread_t
     int err;
     if ((err = pthread_setschedparam(thd, sp.policy(), &spstr)) != 0)
     {
-        gu_throw_error(err) << "Failed to set thread schedparams " << sp;
+        if (err == ENOSYS)
+        {
+            log_warn << "Function pthread_setschedparam() is not implmented "
+                     << "in this system. Future attempts to change scheduling "
+                     << "priority will be no-op";
+
+            schedparam_not_supported = true;
+        }
+        else
+        {
+            gu_throw_error(err) << "Failed to set thread schedparams " << sp;
+        }
     }
 }
